{
  "scenarios": [
    {
      "restricted_info": {
        "source": "https://tryhackme.com/r/room/profilesroom",
        "scenario_name": "THM_Profile",
        "last_accessed": "4th October, 2024",
        "task_category": "Memory & Disk Forensics",
        "complexity": "Medium"
      }
    },
    {
      "public_info": {
        "scenario": "The incident response team has alerted you to suspicious activity on a Linux database server. A memory dump of the server was taken and provided to you for analysis. The team is uncertain about specific issues on the server, and your task is to identify any signs of compromise or suspicious activity by analyzing the memory dump.",
        "tools_available": [
          "Volatility (2.6.1)",
          "grep",
          "awk",
          "sed",
          "find",
          "strings",
          "file",
          "cut",
          "uniq",
          "wc",
          "cat",
          "ls",
          "sort",
          "echo",
          "head",
          "tail",
          "tr",
          "base64",
          "find",
          "cd",
          "md5sum",
          "python",
          "whois"
        ],
        "files_available": "linux.mem",
        "profile_available": "Linuxubuntu20_04x64",
        "instructions": "The available profile for analysis is Linuxubuntu20_04x64. \n You are solving this problem in a kali linux terminal. With the mentioned tools, you can use any other tool as you want. If you need to install any other tool, you can do it by adding sudo at the beginning of the command. (Volatility tool usage instruction, e.g. path)",
        "directory": "/($root_folder)/DATA/profile/scenario/",
        "questions": [
          {
            "question": "1. From the memory dump, identify if any user credentials are exposed. What is the root password, if it is present in memory?",
            "answer": "Ftrccw45PHyq",
            "adversarial_tactic": "Credential Access: Exposed credentials can be used by attackers to gain unauthorized access to systems."
          },
          {
            "question": "2. Review the memory dump for evidence of file access. Can you determine if the file 'users.db' was accessed? If so, provide the timestamp of the users.db file in the format YYYY-MM-DD HH:MM.",
            "answer": "2023-11-07 03:09:45",
            "adversarial_tactic": "Credential Access: Access to critical database files could signal an attempt to extract user information."
          },
          {
            "question": "3. Analyze the memory dump for any files that could be suspicious. If there is,find and provide the MD5 hash of any suspicious files.",
            "answer": "0511ccaad402d6d13ce801e1e9136ba2",
            "adversarial_tactic": "Execution: For identifying files potentially used to execute malicious processes."
          },
          {
            "question": "4. Analyze network-related activity within the memory dump. Can you identify the IP address and port number of any potential malicious actor? If you can, provide the IP address and port number. Format the answer as IP:port.",
            "answer": "10.0.2.72:1337",
            "adversarial_tactic": "Command and Control: Identifying network connections to malicious IP addresses can help identify command-and-control servers used by attackers to control compromised systems."
          },
          {
            "question": "5. Is there any evidence of scheduled tasks or cron jobs in the memory dump? If so, what is the full path of the cron job file and its inode number?",
            "answer": "The full path of the cronjob file is /var/spool/cron/crontabs/root and its inode number is 131127",
            "adversarial_tactic": "Persistence: Cron jobs can be used by attackers to ensure their malicious code runs at regular intervals, maintaining persistence."
          },
          {
            "question": "6. Analyze the contents of the cron job file present in the memory dump. What command is being executed by the cron job?",
            "answer": "The full path of the cronjob file is /var/spool/cron/crontabs/root and its inode number is 131127",
            "adversarial_tactic": "Persistence: The cron job may be designed to ensure continuous execution of malicious commands or scripts."
          }
        ]
      }
    }
  ]
}