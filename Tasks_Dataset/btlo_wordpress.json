{
  "scenarios": [
    {
      "restricted_info": {
        "source": "https://blueteamlabs.online/home/challenge/log-analysis-compromised-wordpress-ce000f5b59",
        "scenario_name": "Compromised_Wordpress",
        "last_accessed": "January 20, 2025",
        "task_category": "Miscellaneous - Log Analysis",
        "complexity": "Easy",
        "writeup": "https://medium.com/@azriq/btlo-log-analysis-compromised-wordpress-challenge-85b4bf7b14e2"
      }
    },
    {
      "public_info": {
        "scenario": "One of our WordPress sites has been compromised. The current hypothesis is that an installed plugin was vulnerable to remote code execution, allowing the attacker access to the servers operating system. As an analyst, you are tasked with examining the logs to identify any indicators of this compromise.",
        "files_available": [
          "capture.log"
        ],
        "tools_available": [
          "tshark",
          "python",
          "md5sum",
          "curl",
          "grep",
          "awk",
          "sed",
          "find",
          "strings",
          "file",
          "cut",
          "unique",
          "wc",
          "cat",
          "ls",
          "sort",
          "echo",
          "head",
          "tail",
          "xxd",
          "tr",
          "base64",
          "cd",
          "whois"
        ],
        "instructions": "You are solving this problem in a kali linux terminal. With the mentioned tools, you can use any other tool as you want. If you need to install any other tool, you can do it by adding sudo at the beginning of the command.",
        "directory": "/($root_folder)/DATA/wordpress/scenario/",
        "questions": [
          {
            "question": "1. Review the logs for any suspicious login activity to the WordPress admin panel. If found, provide the URI of the login attempt, including any parameters (e.g., tokens) that appear with the URI.",
            "answer": "/wp-login.php?itsec-hb-token=adminlogin",
            "adversarial_tactic": "Credential Access: Identifying suspicious login attempts helps understand how attackers may have gained the credentials to access the system."
          },
          {
            "question": "2. Analyze the logs for any external tools or software that the attacker may have used on the server. List any tool names found in the log data.",
            "answer": "wpscan sqlmap",
            "adversarial_tactic": "Reconnaisance: Identifying tools used by the attacker helps understand how they gathered information about the target and potential vulnerabilities."
          },
          {
            "question": "3. Examine the logs for plugin-related activities. Identify if any particular plugin and version might have been involved in providing access to the attacker.",
            "answer": "simple file list 4.2.2",
            "adversarial_tactic": "Initial Access: Identifying the plugin that led to the compromise helps understand the initial attack vector and potential vulnerabilities."
          },
          {
            "question": "4. Check the log data for any files uploaded by the attacker. If any script file appears in the logs, provide the filename.",
            "answer": "fr34k.php",
            "adversarial_tactic": "Execution: Identifying uploaded scripts helps understand the attackers actions and potential goals."
          },
          {
            "question": "5. Analyze access attempts to the identified script file. What was the final HTTP response code returned when the file was accessed last in the log?",
            "answer": "404",
            "adversarial_tactic": "Execution: Understanding the response code helps determine if the attackers actions were successful or if the file was detected and blocked."
          }
        ]
      }
    }
  ]
}