{
  "scenarios": [
    {
      "restricted_info": {
        "source": "https://cyberdefenders.org/blueteam-ctf-challenges/ramnit/",
        "scenario_name": "Ramnit",
        "last_accessed": "4th October, 2024",
        "task_category": "Memory & Disk Forensics",
        "complexity": "Easy"
      }
    },
    {
      "public_info": {
        "scenario": "Our intrusion detection system has alerted us to suspicious behavior on a workstation, pointing to a likely malware intrusion. A memory dump of this system has been taken for analysis. Your task is to analyze this dump, trace the malwares actions, and report key findings.",
        "files_available": "memory.dmp",
        "tools_available": [
          "Volatility 3.0",
          "grep",
          "awk",
          "sed",
          "find",
          "strings",
          "file",
          "cut",
          "unique",
          "wc",
          "cat",
          "ls",
          "sort",
          "echo",
          "head",
          "tail",
          "tr",
          "base64",
          "find",
          "cd",
          "md5sum",
          "exiftool",
          "python",
          "whois",
          "curl"
        ],
        "instructions": "You are solving this problem in a kali linux terminal. With the mentioned tools, you can use any other tool as you want. If you need to install any other tool, you can do it by adding sudo at the beginning of the command. (Volatility tool usage instruction, e.g. path)",
        "directory": "/($root_folder)/DATA/Ram/scenario/",
        "questions": [
          {
            "question": "1. Analyzing the memory dump, can you identify any running process that might exhibit suspicious behavior? If so, provide the name of such a process.",
            "answer": "'ChromeSetup.exe'.",
            "adversarial_tactic": "Execution: Identifying suspicious processes aligns with Execution since it reveals processes that may be actively executing malicious actions within the system."
          },
          {
            "question": "2. If there is any suspicious process identified, can you determine the exact file path of the executable associated with it? If so, what is the file path?",
            "answer": "'C:\\Users\\alex\\Downloads\\ChromeSetup.exe'.",
            "adversarial_tactic": ""
          },
          {
            "question": "3. Can you identify if the suspicious process attempted any network connections? If so, what IP address did it try to connect to? ",
            "answer": "58.64.204.181.",
            "adversarial_tactic": "Command and Control (C2): Network connections from a suspicious process are indicative of Command and Control (C2), as malware often reaches out to an external server to receive commands or exfiltrate data."
          },
          {
            "question": "4. To determine the geographical location associated with the IP address the suspicious process tried to connect to, which city is linked to the IP address? ",
            "answer": "Hong Kong.",
            "adversarial_tactic": "Command and Control: Geolocating IP addresses helps identify the physical location of potential attackers."
          },
          {
            "question": "5. Hashes provide a unique identifier for files, aiding in detecting similar threats across machines. What is the SHA1 hash of the suspiciuos executable? ",
            "answer": "280c9d36039f9432433893dee6126d72b9112ad2.",
            "adversarial_tactic": "Execution: Identifying suspicious processes aligns with Execution since it reveals processes that may be actively executing malicious actions within the system."
          },
          {
            "question": "6. Understanding the malware's development timeline can offer insights into its deployment. Determine the compilation timestamp of the suspicious executable identified ?",
            "answer": "2019-12-01 08:36:04.",
            "adversarial_tactic": "Execution: Identifying the compilation timestamp of a suspicious executable can provide insights into the malware's development timeline."
          }
        ]
      }
    }
  ]
}